<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>GPS Tracker</title>
  <link rel="stylesheet" href="/styles.css">
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= apiKey %>"></script>
  <script src="https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js"></script>
</head>
<body>
  <h1>Device Location</h1>
  <div id="map"></div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
     let map;
     const markers = {};

    // Define day and night themes for the map
    const dayTheme = [];
    const nightTheme = [
      { elementType: "geometry", stylers: [{ color: "#212121" }] },
      { elementType: "labels.icon", stylers: [{ visibility: "off" }] },
      { elementType: "labels.text.fill", stylers: [{ color: "#757575" }] },
      { elementType: "labels.text.stroke", stylers: [{ color: "#212121" }] },
      { featureType: "administrative", elementType: "geometry", stylers: [{ color: "#757575" }] },
      { featureType: "administrative.country", elementType: "labels.text.fill", stylers: [{ color: "#9e9e9e" }] },
      { featureType: "administrative.locality", elementType: "labels.text.fill", stylers: [{ color: "#bdbdbd" }] },
      { featureType: "poi", elementType: "labels.text.fill", stylers: [{ color: "#757575" }] },
      { featureType: "poi.park", elementType: "geometry", stylers: [{ color: "#181818" }] },
      { featureType: "poi.park", elementType: "labels.text.fill", stylers: [{ color: "#616161" }] },
      { featureType: "poi.park", elementType: "labels.text.stroke", stylers: [{ color: "#1b1b1b" }] },
      { featureType: "road", elementType: "geometry.fill", stylers: [{ color: "#2c2c2c" }] },
      { featureType: "road", elementType: "labels.text.fill", stylers: [{ color: "#8a8a8a" }] },
      { featureType: "road.arterial", elementType: "geometry", stylers: [{ color: "#373737" }] },
      { featureType: "road.highway", elementType: "geometry", stylers: [{ color: "#3c3c3c" }] },
      { featureType: "road.highway.controlled_access", elementType: "geometry", stylers: [{ color: "#4e4e4e" }] },
      { featureType: "road.local", elementType: "labels.text.fill", stylers: [{ color: "#616161" }] },
      { featureType: "transit", elementType: "labels.text.fill", stylers: [{ color: "#757575" }] },
      { featureType: "water", elementType: "geometry", stylers: [{ color: "#000000" }] },
      { featureType: "water", elementType: "labels.text.fill", stylers: [{ color: "#3d3d3d" }] }
    ];

    function initMap() {
      const currentHour = new Date().getHours();
      const styles = currentHour >= 18 || currentHour < 6 ? nightTheme : dayTheme;

      map = new google.maps.Map(document.getElementById('map'), {  
        center: { lat: 0, lng: 0 },
        zoom: 8,
        styles: styles
      });

      // Initialize Marker Clusterer
      markerCluster = new MarkerClusterer(map, markerArray, {
        imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'
      });
    }

    function updateMap(deviceId, latitude, longitude) {
      const position = { lat: latitude, lng: longitude };

      if (markers[deviceId]) {
        // Update existing marker position
        markers[deviceId].setPosition(position);
        map.panTo(position);
      } else {
        // Create a new marker
        const marker = new google.maps.Marker({
          position,
          map: map,
          title: `Device ${deviceId}`
        });
        markers[deviceId] = marker;
        markerArray.push(marker); // Add marker to the array for clustering
        markerCluster.addMarker(marker); // Add marker to the cluster
        map.setCenter(position);
      }
    }

    window.onload = initMap;

    // Establish Socket.io connection for real-time updates
    const socket = io();
    socket.on('locationUpdate', (data) => {
      const { device_id, latitude, longitude } = data;
      updateMap(device_id, parseFloat(latitude), parseFloat(longitude));
    });
  </script>
</body>
</html>